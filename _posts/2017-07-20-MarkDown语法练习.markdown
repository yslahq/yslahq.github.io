---
layout: post
title: Sample Post
date: 2017-07-20 19:03:24.000000000 +09:00
---

# 一级标题

## 二级标题

### 三级标题

#### 四级标题

##### 五级标题

###### 六级标题

# 分割线

* * *

# 列表

## 普通无序列表

*   列表文本前使用 [减号+空格]

*   列表文本前使用 [加号+空格]

*   列表文本前使用 [星号+空格]

## 普通有序列表

1.  列表前使用 [数字+空格]
2.  我们会自动帮你添加数字
3.  不用担心数字不对，显示的时候我们会自动把这行的 7 纠正为 3

### 列表嵌套

1.  列出所有元素：

        *   无序列表元素 A

                1.  元素 A 的有序子列表

        *   前面加四个空格

2.  列表里的多段换行：
 前面必须加四个空格，
 这样换行，整体的格式不会乱
3.  列表里引用：

    > 前面空一行
> 仍然需要在 &gt;  前面加四个空格

4.  列表里代码段：

         前面四个空格，之后按代码语法 <span class="hljs-escape">``</span><span class="hljs-escape">` </span>书写
    `</pre><pre>` 或者直接空八个，引入代码块
    `</pre>

    # 引用

    ## 普通引用

    > 引用文本前使用 [大于号+空格]
>     折行可以不加，新起一行都要加上哦

    ## 引用里嵌套引用

    > 最外层引用
> 
> > 多一个 > 嵌套一层引用
> > 
> > > 可以嵌套很多层

    ## 引用里嵌套代码块

    > <pre>`同样的，在前面加四个空格形成代码块
>     `</pre><pre>`或者使用 <span class="hljs-escape">``</span><span class="hljs-escape">` </span>形成代码块
>     `</pre>

    # 粗斜体

    _斜体文本_    _斜体文本_
    **粗体文本**    **粗体文本**
    **_粗斜体文本_**    **_粗斜体文本_**

    # 表格

    <table>
    <thead>
    <tr>
    <th>表头一</th>
    <th>表头2</th>
    <th>表头3</th>
    <th>表头4</th>
    <th>表头5</th>
    </tr>
    </thead>
    <tbody>
    <tr>
    <td>1</td>
    <td>1</td>
    <td>1</td>
    <td>1</td>
    <td>1</td>
    </tr>
    <tr>
    <td>1</td>
    <td>1</td>
    <td>1</td>
    <td>1</td>
    <td>1</td>
    </tr>
    <tr>
    <td>1</td>
    <td>1</td>
    <td>1</td>
    <td>1</td>
    <td>1</td>
    </tr>
    <tr>
    <td>1</td>
    <td>1</td>
    <td>1</td>
    <td>1</td>
    <td>1</td>
    </tr>
    <tr>
    <td>1</td>
    <td>1</td>
    <td>1</td>
    <td>1</td>
    <td>1</td>
    </tr>
    </tbody>
    </table>

    # 代码框

    <pre>`$(<span class="hljs-built_in">document</span>).ready(<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-params">()</span> </span>{
        alert(<span class="hljs-string">'hello world'</span>);
    });
    `</pre>
    <pre>`$(<span class="hljs-function"><span class="hljs-keyword">function</span><span class="hljs-params">()</span></span>{
        <span class="hljs-comment">//实现左侧导航动画效果</span>
        $(<span class="hljs-string">".baseUI>li>a"</span>).off(<span class="hljs-string">"click"</span>);
        $(<span class="hljs-string">".baseUI>li>a"</span>).on(<span class="hljs-string">"click"</span>,<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-params">()</span> </span>{
            $(<span class="hljs-string">".baseUI>li>ul"</span>).slideUp();
            $(<span class="hljs-keyword">this</span>).next().slideDown(<span class="hljs-number">300</span>);
        });
        <span class="hljs-comment">//默认收起全部，展示第一个</span>
        $(<span class="hljs-string">".baseUI>li>ul"</span>).slideUp();
        $(<span class="hljs-string">".baseUI>li>a"</span>).eq(<span class="hljs-number">0</span>).trigger(<span class="hljs-string">"click"</span>);

        $(<span class="hljs-string">".baseUI>li>ul>li"</span>).off();
        $(<span class="hljs-string">".baseUI>li>ul>li"</span>).on(<span class="hljs-string">"click"</span>,<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-params">()</span> </span>{
            <span class="hljs-keyword">if</span>(!$(<span class="hljs-keyword">this</span>).hasClass(<span class="hljs-string">"current"</span>)){
                $(<span class="hljs-string">".baseUI>li>ul>li"</span>).removeClass(<span class="hljs-string">"current"</span>);
                $(<span class="hljs-keyword">this</span>).addClass(<span class="hljs-string">"current"</span>);
            }
        });
        <span class="hljs-comment">//模拟点击</span>
        $(<span class="hljs-string">".baseUI>li>ul>li>a"</span>).eq(<span class="hljs-number">0</span>).trigger(<span class="hljs-string">"click"</span>);
    });

# 链接

[百度](www.baidu.com)

# 图片

![Markdown](http://i4.piimg.com/1949/0d13a45f01d3e8ce.png)